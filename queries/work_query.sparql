PREFIX fx: <http://sparql.xyz/facade-x/ns/>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX urb: <http://purl.archive.org/urbooks#>
PREFIX urw: <http://purl.archive.org/urwriters#>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dul: <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#>
PREFIX reo: <ttp://www.semanticweb.org/research-ontology/>
PREFIX xml: <http://www.w3.org/XML/1998/namespace>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX org: <http://www.w3.org/ns/org#>
PREFIX soa: <https://semopenalex.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>


#java -jar sparql-anything.jar -q queries/query.sparql > output.ttl
CONSTRUCT {
    ?work a soa:Work;
        dcterms:title "titolo";
        reo:haspPubblicationYear ?reoPubblicationYear;
        reo:hasType ?reoWorkType.
    ?reoWorkType a reo:WorkType.
    #rdf:Property ?reoTitle;




} WHERE {
  SERVICE <x-sparql-anything:csv.headers=true,location=data/pubblications.csv> {
    []      xyz:ID-prodotto ?id;
            xyz:Titolo ?title;
            xyz:first-author ?firstAuthor;
            xyz:Titolo ?title;
            xyz:Anno-di-pubblicazione ?pubblicationYear;
            xyz:Tipologia ?workType;
  }
  BIND(CONCAT(STR(?name), " ", STR(?surname)) AS ?fullName)
  BIND(IRI(CONCAT(STR(reo:), LCASE(REPLACE(CONCAT(?id, "-", ?firstAuthor), " ", "-")))) AS ?work) .
  BIND(IRI(CONCAT(STR(reo:), ?id )) AS ?reoid).
  BIND(IRI(CONCAT(STR(reo:), ?firstAuthor )) AS ?reFirstAuthor).
  BIND(STR(?title) AS ?stringTitle)
  BIND(IRI(CONCAT(STR(reo:), ?stringTitle )) AS ?reoStringTitle).
  BIND(IRI(CONCAT(STR(reo:), ?pubblicationYear )) AS ?reoPubblicationYear).
  BIND(IRI(CONCAT(STR(reo:), ?workType )) AS ?reoWorkType).



}